%{
#include "egemenkilic-hw3.h"
#include "egemenkilic-hw3.tab.h"

int nested = 0;
int lineCount = 1;
%}

tNEWLINE \n

tLOCALPART [A-Za-z0-9\-_]+(([A-Za-z0-9\-_]*|\.?)[A-Za-z0-9\-_])*
tDOMAIN [A-Za-z0-9]+[A-Za-z0-9\-]*[A-Za-z0-9]+|[A-Za-z0-9]{1}

/* Comments */
tSLC  "//" 
tOMLC "/\*" 
tCMLC "*/"   


%x singleLineComment multiLineComment
%%
{tSLC}  BEGIN(singleLineComment);
<singleLineComment>{tNEWLINE}    {BEGIN(INITIAL);}
<singleLineComment>.    ;


{tOMLC} {BEGIN(multiLineComment); ++nested;}
<multiLineComment>{tCMLC}      { if (--nested == 0) BEGIN(INITIAL); }
<multiLineComment>{tOMLC}     ++nested;
<multiLineComment>{tNEWLINE}    {} ;
<multiLineComment>.         ;

"Mail" return tMAIL;
"end"[ \t\n\r\f]+"Mail" { 
    int i;
    for(i = 0; yytext[i] != '\0'; i++) {
        if(yytext[i] == '\n') {
            lineCount++;
        }
    }
    return tENDMAIL;
}
    
"schedule" return tSCHEDULE;
"end"[ \t\n\r\f]+"schedule" {return tENDSCHEDULE;}

"send" return  tSEND;
"set" return tSET;
"to" return tTO;
"from" return tFROM;
@ return tAT;
, return tCOMMA;
: return tCOLON;
\( return tLPR;
\) return tRPR;
\[ return tLBR;
\] return tRBR;

[a-zA-Z\_]+[a-zA-Z0-9\_]* {
    char *identifierName = (char *)malloc(strlen(yytext));
    strcpy(identifierName,yytext);   
    yylval.identNode.lineNum = lineCount;
    yylval.identNode.value = identifierName; 
    return tIDENT;
}
["][^\"]*["] {
    char *stringName = (char *)malloc(strlen(yytext));
    strcpy(stringName, yytext);
    yylval.lineNum = lineCount;
    yylval.stringNode.value = stringName;
    return tSTRING;}

[0-9]{2}"/"[0-9]{2}"/"[0-9]{4}|[0-9]{2}\.[0-9]{2}\.[0-9]{4}|[0-9]{2}-[0-9]{2}-[0-9]{4} {
    yylval.stringNode.value = strdup(yytext);
    yylval.stringNode.lineNum = lineCount;
    return tDATE;
}

[0-9]{2}:[0-9]{2} {
    yylval.stringNode.value = strdup(yytext);
    yylval.stringNode.lineNum = lineCount;
    return tTIME;
}

{tLOCALPART}"@"({tDOMAIN}"."{tDOMAIN}"."{tDOMAIN}|{tDOMAIN}"."{tDOMAIN}) {
    yylval.stringNode.value = strdup(yytext);
    yylval.stringNode.lineNum = lineCount;
    return tADDRESS;
}

[ \t]+
{tNEWLINE}    {
    lineCount+=1;
}
.	    return yytext[0];
%%